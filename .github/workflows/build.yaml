name: GraalVM Native Image builds
on: [push, pull_request]
jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Version
        id: vars
        shell: bash
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_OUTPUT

  build:
    needs: [ precheck ]
    name: hass-qli on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest, macos-latest-large, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          #native-image-job-reports: 'true'

      - name: Build 
        run: |
          ## skipping until we find reliable way to mock websocket/rest homeassistant api
          mvn -Pnative clean package -DskipTests
      
      - name: Upload jar
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
            name: hass-qli.jar
            path: target/hass-qli-*-SNAPSHOT.jar

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os == 'windows-latest' && format('hass-qli-{0}.exe', matrix.os) || format('hass-qli-{0}', matrix.os) }}
          path: target/${{ matrix.os == 'windows-latest' && 'hass-qli-*-SNAPSHOT.exe' || 'hass-qli-*-SNAPSHOT' }}

  release:
      name: Release
      if: "contains(github.event.head_commit.message, '[release]') && github.event.ref=='refs/heads/main'"
      needs: [ precheck, build ]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
  
        - name: Download all build artifacts
          uses: actions/download-artifact@v4
  
        - name: Run JReleaser
          uses: jreleaser/release-action@v2
          env:
            JRELEASER_GITHUB_TOKEN: ${{ secrets.JRELEASER_GITHUB_TOKEN }}
            JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
  
        - name: JReleaser release output
          if: always()
          uses: actions/upload-artifact@v3
          with:
                  name: jreleaser-release
                  path: |
                    out/jreleaser/trace.log
                    out/jreleaser/output.properties